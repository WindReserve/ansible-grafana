---
monitoring_grafana_version: latest

# Should we use the provisioning capability when possible (provisioning require grafana >= 5.0)
monitoring_grafana_use_provisioning: true

# Should the provisioning be kept synced. If true, previous provisioned objects will be removed if not referenced anymore.
monitoring_grafana_provisioning_synced: false

monitoring_grafana_instance: "{{ ansible_fqdn | default(ansible_host) | default(inventory_hostname) }}"

monitoring_grafana_logs_path: "/docker/grafana/logs" # "/var/log/grafana"
monitoring_grafana_data_path: "/docker/grafana/data" # "/var/lib/grafana"

monitoring_grafana_base_path: "/docker/grafana" # "/etc/grafana"
monitoring_grafana_datasources_path: "{{ monitoring_grafana_base_path }}/datasources" # "/etc/grafana/datasources"
monitoring_grafana_provisioning_path: "{{ monitoring_grafana_base_path }}/provisioning" # "/etc/grafana/provisioning"
monitoring_grafana_provisioning_datasources_path: "{{ monitoring_grafana_provisioning_path }}/datasources" # "/etc/grafana/provisioning/datasources"
monitoring_grafana_provisioning_dashboards_path: "{{ monitoring_grafana_provisioning_path }}/dashboards" # "/etc/grafana/provisioning/dashoboards"
monitoring_grafana_provisioning_notifiers_path: "{{ monitoring_grafana_provisioning_path }}/notifiers" # "/etc/grafana/provisioning/notifiers"
monitoring_grafana_provisioning_plugins_path: "{{ monitoring_grafana_provisioning_path }}/plugins"  # "/etc/grafana/provisioning/plugins"

monitoring_grafana_address: "0.0.0.0"
monitoring_grafana_port: 3000
# To enable the use of ports below 1024 for unprivileged processes linux needs to set CAP_NET_BIND_SERVICE.
# This has some security implications, and should be a conscious choice.
# Get informed by reading: http://man7.org/linux/man-pages/man7/capabilities.7.html
monitoring_grafana_cap_net_bind_service: false

# External Grafana address. Variable maps to "root_url" in grafana server section
monitoring_grafana_url: "http://{{ monitoring_grafana_address }}:{{ monitoring_grafana_port }}"
monitoring_grafana_api_url: "{{ monitoring_grafana_url }}"
monitoring_grafana_domain: "{{ ansible_fqdn | default(ansible_host) | default('localhost') }}"

# Additional options for grafana "server" section
# This section WILL omit options for: http_addr, http_port, domain, and root_url, as those settings are set by variables listed before
monitoring_grafana_server:
  protocol: http
  enforce_domain: false
  socket: ""
  cert_key: ""
  cert_file: ""
  enable_gzip: false
  static_root_path: public
  router_logging: false
  serve_from_sub_path: false

# Variables correspond to ones in grafana.ini configuration file
# Security
monitoring_grafana_security:
  admin_user: admin
  admin_password: ""
#  secret_key: ""
#  login_remember_days: 7
#  cookie_username: monitoring_grafana_user
#  cookie_remember_name: monitoring_grafana_remember
#  disable_gravatar: true
#  data_source_proxy_whitelist:

# Database setup
monitoring_grafana_database:
  type: sqlite3
#  host: 127.0.0.1:3306
#  name: grafana
#  user: root
#  password: ""
#  url: ""
#  ssl_mode: disable
#  path: grafana.db
#  max_idle_conn: 2
#  max_open_conn: ""
#  log_queries: ""

# Remote cache
monitoring_grafana_remote_cache: {}

# User management and registration
monitoring_grafana_welcome_email_on_sign_up: false
monitoring_grafana_users:
  allow_sign_up: false
  # allow_org_create: true
  # auto_assign_org: true
  auto_assign_org_role: Viewer
  # login_hint: "email or username"
  default_theme: dark
  # external_manage_link_url: ""
  # external_manage_link_name: ""
  # external_manage_info: ""

# grafana authentication mechanisms
monitoring_grafana_auth: {}
#  disable_login_form: false
#  oauth_auto_login: false
#  disable_signout_menu: false
#  signout_redirect_url: ""
#  anonymous:
#    org_name: "Main Organization"
#    org_role: Viewer
#  ldap:
#    config_file: "/etc/grafana/ldap.toml"
#    allow_sign_up: false
#  basic:
#    enabled: true

monitoring_grafana_ldap: {}
#  verbose_logging: false
#  servers:
#    host: 127.0.0.1
#    port: 389 # 636 for SSL
#    use_ssl: false
#    start_tls: false
#    ssl_skip_verify: false
#    root_ca_cert: /path/to/certificate.crt
#    bind_dn: "cn=admin,dc=grafana,dc=org"
#    bind_password: grafana
#    search_filter: "(cn=%s)" # "(sAMAccountName=%s)" on AD
#    search_base_dns:
#      - "dc=grafana,dc=org"
#    group_search_filter: "(&(objectClass=posixGroup)(memberUid=%s))"
#    group_search_base_dns:
#      - "ou=groups,dc=grafana,dc=org"
#    attributes:
#      name: givenName
#      surname: sn
#      username: sAMAccountName
#      member_of: memberOf
#      email: mail
#  group_mappings:
#    - name: Main Org.
#      id: 1
#      groups:
#        - group_dn: "cn=admins,ou=groups,dc=grafana,dc=org"
#          org_role: Admin
#        - group_dn: "cn=editors,ou=groups,dc=grafana,dc=org"
#          org_role: Editor
#        - group_dn: "*"
#          org_role: Viewer
#    - name: Alternative Org
#      id: 2
#      groups:
#        - group_dn: "cn=alternative_admins,ou=groups,dc=grafana,dc=org"
#          org_role: Admin

monitoring_grafana_session: {}
#  provider: file
#  provider_config: "sessions"

monitoring_grafana_analytics: {}
#  reporting_enabled: true
#  google_analytics_ua_id: ""

# Set this for mail notifications
monitoring_grafana_smtp: {}
#  host:
#  user:
#  password:
#  from_address:

# Enable grafana alerting mechanism
monitoring_grafana_alerting:
  execute_alerts: true
#  error_or_timeout: 'alerting'
#  nodata_or_nullvalues: 'no_data'
#  concurrent_render_limit: 5

# Grafana logging configuration
monitoring_grafana_log:
# mode: 'console file'
# level: info

# Internal grafana metrics system
monitoring_grafana_metrics: {}
#  interval_seconds: 10
#  graphite:
#    address: "localhost:2003"
#    prefix: "prod.grafana.%(instance_name)s"

# Distributed tracing options
monitoring_grafana_tracing: {}
#  address: "localhost:6831"
#  always_included_tag: "tag1:value1,tag2:value2"
#  sampler_type: const
#  sampler_param: 1

monitoring_grafana_snapshots: {}
#  external_enabled: true
#  external_snapshot_url: "https://snapshots-origin.raintank.io"
#  external_snapshot_name: "Publish to snapshot.raintank.io"
#  snapshot_remove_expired: true
#  snapshot_TTL_days: 90

# External image store
monitoring_grafana_image_storage: {}
#  provider: gcs
#  key_file:
#  bucket:
#  path:


#######
# Plugins from https://grafana.com/plugins
monitoring_grafana_plugins: []
#  - raintank-worldping-app

# Dashboards from https://grafana.com/dashboards
monitoring_grafana_dashboards: []
#  - dashboard_id: '4271'
#    revision_id: '3'
#    datasource: 'Prometheus'
#  - dashboard_id: '1860'
#    revision_id: '4'
#    datasource: 'Prometheus'
#  - dashboard_id: '358'
#    revision_id: '1'
#    datasource: 'Prometheus'

monitoring_grafana_dashboards_dir: "dashboards"

# Alert notification channels to configure
monitoring_grafana_alert_notifications: []
#  - name: "Email Alert"
#    type: "email"
#    uid: channel1
#    is_default: true
#    settings:
#      addresses: "example@example.com"

# Datasources to configure
monitoring_grafana_datasources: []
#  - name: "Prometheus"
#    type: "prometheus"
#    access: "proxy"
#    url: "http://prometheus.mydomain"
#    basicAuth: true
#    basicAuthUser: "admin"
#    basicAuthPassword: "password"
#    isDefault: true
#    jsonData:
#      tlsAuth: false
#      tlsAuthWithCACert: false
#      tlsSkipVerify: true

# API keys to configure
monitoring_grafana_api_keys: []
#  - name: "admin"
#    role: "Admin"
#  - name: "viewer"
#    role: "Viewer"
#  - name: "editor"
#    role: "Editor"

# The location where the keys should be stored.
monitoring_grafana_api_keys_dir: "{{ lookup('env', 'HOME') }}/grafana/keys"

monitoring_grafana_environment: {}

# Panels configurations
monitoring_grafana_panels: {}
#  disable_sanitize_html: false
#  enable_alpha: false
