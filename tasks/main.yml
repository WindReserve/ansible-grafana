---
- include_tasks: "{{ role_path }}/tasks/init.yml"
  tags:
    - always

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - grafana_install
    - grafana_configure
    - grafana_datasources
    - grafana_notifications
    - grafana_dashboards

- include: preflight.yml
  tags:
    - grafana_install
    - grafana_configure
    - grafana_datasources
    - grafana_notifications
    - grafana_dashboards

- include: configure.yml
  become: true
  tags:
    - grafana_configure

- include: install.yml
  become: true
  tags:
    - grafana_install

- include: plugins.yml
  when: monitoring_grafana_plugins != []
  tags:
    - grafana_configure

- name: Restart grafana before configuring datasources and dashboards
  meta: flush_handlers
  tags:
    - grafana_install
    - grafana_configure
    - grafana_datasources
    - grafana_notifications
    - grafana_dashboards
    - grafana_run

- name: Wait for grafana to start (http/s)
  wait_for:
    host: "{{ monitoring_grafana_address }}"
    port: "{{ monitoring_grafana_port }}"
  when: monitoring_grafana_server.protocol is undefined or monitoring_grafana_server.protocol in ['http', 'https']
  tags:
    - grafana_install
    - grafana_configure
    - grafana_datasources
    - grafana_notifications
    - grafana_dashboards
    - grafana_run

- name: Wait for grafana to start (socket)
  wait_for:
    path: "{{ monitoring_grafana_server.socket }}"
  when: monitoring_grafana_server.protocol is defined and monitoring_grafana_server.protocol == 'socket'
  tags:
    - grafana_install
    - grafana_configure
    - grafana_datasources
    - grafana_notifications
    - grafana_dashboards
    - grafana_run

- include: api_keys.yml
  when: monitoring_grafana_api_keys | length > 0
  tags:
    - grafana_configure
    - grafana_run

- include: datasources.yml
  when: monitoring_grafana_datasources != []
  tags:
    - grafana_configure
    - grafana_datasources
    - grafana_run

- include: notifications.yml
  when: monitoring_grafana_alert_notifications | length > 0
  tags:
    - grafana_configure
    - grafana_notifications
    - grafana_run

- name: "Check if there are any dashboards in local {{ monitoring_grafana_dashboards_dir }}"
  become: false
  set_fact:
    found_dashboards: "{{ lookup('fileglob', monitoring_grafana_dashboards_dir + '/*.json', wantlist=True) }}"
  tags:
    - grafana_configure
    - grafana_dashboards
    - grafana_run

- include: dashboards.yml
  when: monitoring_grafana_dashboards | length > 0 or found_dashboards | length > 0
  tags:
    - grafana_configure
    - grafana_dashboards
    - grafana_run
